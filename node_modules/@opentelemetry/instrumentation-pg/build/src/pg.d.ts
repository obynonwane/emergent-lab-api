import { InstrumentationBase, InstrumentationConfig, InstrumentationNodeModuleDefinition } from '@opentelemetry/instrumentation';
import * as pgTypes from 'pg';
import * as pgPoolTypes from 'pg-pool';
export interface PgInstrumentationConfig extends InstrumentationConfig {
    /**
     * If true, additional information about query parameters and
     * results will be attached (as `attributes`) to spans representing
     * database operations.
     */
    enhancedDatabaseReporting?: boolean;
}
export declare class PgInstrumentation extends InstrumentationBase {
    static readonly COMPONENT = "pg";
    static readonly DB_TYPE = "sql";
    static readonly BASE_SPAN_NAME: string;
    constructor(config?: PgInstrumentationConfig);
    protected init(): (InstrumentationNodeModuleDefinition<typeof pgTypes> | InstrumentationNodeModuleDefinition<typeof pgPoolTypes>)[];
    private _getClientQueryPatch;
    private _getPoolConnectPatch;
}
//# sourceMappingURL=pg.d.ts.map